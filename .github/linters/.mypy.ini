[mypy]
# Enable all strict options
strict = True

# Additional options for more granularity, if needed
# Disallow usage of Any type
disallow_any_unimported = True
disallow_any_expr = True
disallow_any_decorated = True
disallow_any_explicit = True
disallow_any_generics = True

# Disallow untyped function definitions
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True

# Disallow usage of 'Any' types for type annotations
no_implicit_optional = True

# Require return type annotations on all functions
check_untyped_defs = True

# Warn about untyped decorators that could return Any
warn_untyped_decorators = True

# Prevents adding methods dynamically via assignment
disallow_subclassing_any = True

# Warn about untyped function calls
warn_incomplete_stub = True

# Disallow variable annotations with type Any
warn_redundant_casts = True
warn_unused_ignores = True
warn_return_any = True
warn_unreachable = True

# Make sure all types are checked, even in untyped functions
follow_imports = silent
ignore_missing_imports = True

explicit_package_bases = True
