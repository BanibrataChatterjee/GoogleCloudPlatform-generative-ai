import os
import subprocess
from tqdm import tqdm
import json

class PythonFilesManager:
    """A class to manage Python files, run Bash commands, and save logs to a JSON file."""

    def __init__(self, root_path):
        """Initialize the PythonFilesManager.

        Args:
            root_path (str): The root path where Python files are located.
        """
        self.python_files = []
        self.root_path = root_path

    def get_py_files(self, path):
        """Recursively find Python files in the specified path.

        Args:
            path (str): The path to search for Python files.
        """
        if os.path.isdir(path):
            for file in os.listdir(path):
                self.get_py_files(os.path.join(path, file))
        else:
            if path.endswith('.py'):
                self.python_files.append(path)

    def run_bash_commands_and_save_output(self, py_file_path):
        """Run Bash commands on a Python file and save the output.

        Args:
            py_file_path (str): The path to the Python file.

        Returns:
            str: The logs generated by running Bash commands.
        """
        # Define the Bash commands
        bash_commands = [
            f"flake8 {py_file_path}",  # Command 1
            f"nbqa flake8 {py_file_path}"  # Command 2
        ]

        logs = ""

        # Run each Bash command and store the output in the dictionary
        for command in bash_commands:
            result = subprocess.run(command, shell=True, stdout=subprocess.PIPE)
            logs += result.stdout.decode("utf-8") + '\n'

        return logs

    def process_python_files_and_save_logs(self):
        """Process all Python files, run Bash commands, and save the logs to a JSON file and a Markdown file."""
        self.get_py_files(self.root_path)

        print(f"PYTHON FILES : {self.python_files}")

        # Run the function for each Python file and store the logs in a dictionary
        logs_dict = {}
        markdown_logs = "# Logs\n\n"

        for file_path in tqdm(self.python_files):
            logs = self.run_bash_commands_and_save_output(file_path)
            logs_dict[file_path] = logs

            # Add logs to Markdown format
            markdown_logs += f"## `{file_path}`\n\n"
            markdown_logs += "```bash\n"
            markdown_logs += logs
            markdown_logs += "```\n\n"

        # Save the logs to a JSON file
        with open('logs.json', 'w') as f:
            json.dump(logs_dict, f)

        # Save the logs to a Markdown file
        with open('logs.md', 'w') as f:
            f.write(markdown_logs)

        print("Logs saved to 'logs.json' and 'logs.md'")

# Example usage:
ROOT_PATH = '/Users/saarthakseth/Development/CymbalBank_Next24/functions'
manager = PythonFilesManager(ROOT_PATH)
manager.process_python_files_and_save_logs()
